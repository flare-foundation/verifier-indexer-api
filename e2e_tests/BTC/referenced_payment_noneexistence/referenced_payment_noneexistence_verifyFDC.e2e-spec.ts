import { expect } from "chai";
import * as request from "supertest";
import { app } from "../helper";


describe("/ReferencedPaymentNonexistence/verifyFDC", () => {
    it("should get status", async () => {
        const payload = {
            abiEncodedRequest: "0x5265666572656e6365645061796d656e744e6f6e6578697374656e6365000000746573744254430000000000000000000000000000000000000000000000000082397886cabdaf4b939554abd5c36dbcb2607d3af32f6e1ad8bdba4a368ba6ec0000000000000000000000000000000000000000000000000000000000354167000000000000000000000000000000000000000000000000000000000035416a0000000000000000000000000000000000000000000000000000000067481f7910b66af8f7bb2f450482037671e44a90ebcaf13e032108d3e8e82b9ec13bfc3700000000000000000000000000000000000000000000000000000000004e86c600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001cb59478070fabf8aef96f6ff20a05abb8e922601cd24f13a4fc876b35fa62feb"
        }
        const response = await request(app.getHttpServer())
            .post("/ReferencedPaymentNonexistence/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(200)
            .expect('Content-Type', /json/)

        expect(response.body.status).to.be.equal('VALID');
    });
    it("should get abiEncodedResponse without 0x in abiEncodedRequest", async () => {
        const payload = {
            abiEncodedRequest: "5265666572656e6365645061796d656e744e6f6e6578697374656e6365000000746573744254430000000000000000000000000000000000000000000000000082397886cabdaf4b939554abd5c36dbcb2607d3af32f6e1ad8bdba4a368ba6ec0000000000000000000000000000000000000000000000000000000000354167000000000000000000000000000000000000000000000000000000000035416a0000000000000000000000000000000000000000000000000000000067481f7910b66af8f7bb2f450482037671e44a90ebcaf13e032108d3e8e82b9ec13bfc3700000000000000000000000000000000000000000000000000000000004e86c600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001cb59478070fabf8aef96f6ff20a05abb8e922601cd24f13a4fc876b35fa62feb",
        }
        const response = await request(app.getHttpServer())
            .post("/ReferencedPaymentNonexistence/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(200)
            .expect('Content-Type', /json/)

        expect(response.body.status).to.be.equal('VALID');
    });
    it("should get abiEncodedResponse with 0X in abiEncodedRequest", async () => {
        const payload = {
            abiEncodedRequest: "0X5265666572656e6365645061796d656e744e6f6e6578697374656e6365000000746573744254430000000000000000000000000000000000000000000000000082397886cabdaf4b939554abd5c36dbcb2607d3af32f6e1ad8bdba4a368ba6ec0000000000000000000000000000000000000000000000000000000000354167000000000000000000000000000000000000000000000000000000000035416a0000000000000000000000000000000000000000000000000000000067481f7910b66af8f7bb2f450482037671e44a90ebcaf13e032108d3e8e82b9ec13bfc3700000000000000000000000000000000000000000000000000000000004e86c600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001cb59478070fabf8aef96f6ff20a05abb8e922601cd24f13a4fc876b35fa62feb",
        }
        const response = await request(app.getHttpServer())
            .post("/ReferencedPaymentNonexistence/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(200)
            .expect('Content-Type', /json/)

        expect(response.body.status).to.be.equal('VALID');
    });
    it("should get bad request (400) with empty payload", async () => {
        const payload = {
        }
        await request(app.getHttpServer())
            .post("/ReferencedPaymentNonexistence/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(400)
    });
    it("should get bad request (400) with non hexadecimal character in abiEncodedRequest", async () => {
        const payload = {
            abiEncodedRequest: "0xy265666572656e6365645061796d656e744e6f6e6578697374656e6365000000746573744254430000000000000000000000000000000000000000000000000082397886cabdaf4b939554abd5c36dbcb2607d3af32f6e1ad8bdba4a368ba6ec0000000000000000000000000000000000000000000000000000000000354167000000000000000000000000000000000000000000000000000000000035416a0000000000000000000000000000000000000000000000000000000067481f7910b66af8f7bb2f450482037671e44a90ebcaf13e032108d3e8e82b9ec13bfc3700000000000000000000000000000000000000000000000000000000004e86c600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001cb59478070fabf8aef96f6ff20a05abb8e922601cd24f13a4fc876b35fa62feb",
        }
        await request(app.getHttpServer())
            .post("/ReferencedPaymentNonexistence/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(400)
    });
});











