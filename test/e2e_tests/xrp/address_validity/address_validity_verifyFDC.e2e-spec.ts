import { expect } from "chai";
import * as request from "supertest";
import { app } from "../helper";


describe("/AddressValidity/verifyFDC", () => {
    it("should get abiEncodedResponse", async () => {
        const payload = {
            abiEncodedRequest: "0x4164647265737356616c69646974790000000000000000000000000000000000746573745852500000000000000000000000000000000000000000000000000017e762a4f37624b29a441fe8bf368644a65b0d47807753959f6ee66428969ef0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000022724836584e6d71574a61637177316359777872567168694d6351727756324c583166000000000000000000000000000000000000000000000000000000000000",
        }
        const response = await request(app.getHttpServer())
            .post("/AddressValidity/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(200)
            .expect('Content-Type', /json/)

        expect(response.body.status).to.be.equal('VALID');
    });
    it("should get abiEncodedResponse without 0x in abiEncodedRequest", async () => {
        const payload = {
            abiEncodedRequest: "4164647265737356616c69646974790000000000000000000000000000000000746573745852500000000000000000000000000000000000000000000000000017e762a4f37624b29a441fe8bf368644a65b0d47807753959f6ee66428969ef0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000022724836584e6d71574a61637177316359777872567168694d6351727756324c583166000000000000000000000000000000000000000000000000000000000000",
        }
        const response = await request(app.getHttpServer())
            .post("/AddressValidity/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(200)
            .expect('Content-Type', /json/)

        expect(response.body.status).to.be.equal('VALID');
    });
    it("should get abiEncodedResponse with 0X in abiEncodedRequest", async () => {
        const payload = {
            abiEncodedRequest: "0X4164647265737356616c69646974790000000000000000000000000000000000746573745852500000000000000000000000000000000000000000000000000017e762a4f37624b29a441fe8bf368644a65b0d47807753959f6ee66428969ef0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000022724836584e6d71574a61637177316359777872567168694d6351727756324c583166000000000000000000000000000000000000000000000000000000000000",
        }
        const response = await request(app.getHttpServer())
            .post("/AddressValidity/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(200)
            .expect('Content-Type', /json/)

        expect(response.body.status).to.be.equal('VALID');
    });
    it("should get bad request (400) with empty payload", async () => {
        const payload = {
        }
        await request(app.getHttpServer())
            .post("/AddressValidity/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(400)
    });
    it("should get bad request (400) with non hexadecimal character in abiEncodedRequest", async () => {
        const payload = {
            abiEncodedRequest: "0xp164647265737356616c69646974790000000000000000000000000000000000746573745852500000000000000000000000000000000000000000000000000017e762a4f37624b29a441fe8bf368644a65b0d47807753959f6ee66428969ef0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000022724836584e6d71574a61637177316359777872567168694d6351727756324c583166000000000000000000000000000000000000000000000000000000000000",
        }
        await request(app.getHttpServer())
            .post("/AddressValidity/verifyFDC")
            .send(payload)
            .set('X-API-KEY', '12345')
            .expect(400)
    });
});









